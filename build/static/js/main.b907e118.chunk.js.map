{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","useState","setToken","logoutHandler","clear","clearTimeout","contextValue","expirationTime","setItem","remainingTime","currentTime","Date","getTime","calculateRemainingTime","setTimeout","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","newPasswordInputRef","useRef","history","useHistory","form","onSubmit","event","preventDefault","console","log","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","response","ok","Error","replace","catch","error","message","control","htmlFor","ref","type","minLength","id","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","auth","url","enteredEmail","enteredPassword","email","json","data","errorMessage","expiresIn","toString","alert","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b907e118.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3MWho\",\"control\":\"ProfileForm_control__3YMx_\",\"action\":\"ProfileForm_action__1xS00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2El9i\",\"logo\":\"MainNavigation_logo__2O4Oo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2_DmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3W9TX\"};","import React,{useState} from 'react';\r\n\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: token => {},\r\n    logout: () => {},\r\n});\r\n\r\n\r\nlet logoutTimer;\r\n\r\nconst calculateRemainingTime = expirationTime => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n}\r\n\r\nexport const AuthContextProvider = props => {\r\n\r\n    const initialToken = localStorage.getItem('token');\r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    \r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n        localStorage.clear();\r\n\r\n        if(logoutTimer){\r\n            clearTimeout(logoutTimer)\r\n        }\r\n    };\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n        logoutTimer = setTimeout(logoutHandler,remainingTime)\r\n    };\r\n\r\n    const contextValue = {\r\n        token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    }\r\n\r\n\r\n    return <AuthContext.Provider value={contextValue} >\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;\r\n","import { Link } from \"react-router-dom\";\nimport React, { useContext } from \"react\";\n\n\nimport classes from \"./MainNavigation.module.css\";\n\nimport AuthContext from \"../../store/auth-context\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  \n\n  const logoutHandler = () => {\n    authCtx.logout();\n    // history.replace('/auth');\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!authCtx.isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {authCtx.isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {authCtx.isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler} >Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProfileForm = () => {\n  const authCtx = useContext(AuthContext);\n  const newPasswordInputRef = useRef();\n\n  const history = useHistory();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    console.log(authCtx);\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDFNdag07Lw9M4lTkEZcxtXLgXMkwVvZak\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          history.replace(\"/\");\n          \n        } else {\n          throw new Error(\"Post is failed!\");\n        }\n      })\n\n      .catch((error) => console.log(error.message));\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          ref={newPasswordInputRef}\n          type=\"password\"\n          minLength=\"7\"\n          id=\"new-password\"\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFNdag07Lw9M4lTkEZcxtXLgXMkwVvZak\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDFNdag07Lw9M4lTkEZcxtXLgXMkwVvZak\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        setIsLoading(false);\n        if (response.ok) {\n          return response.json();\n        } else {\n          return response.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n\n        authCtx.login(data.idToken, expirationTime.toString());\n        history.replace(\"/\");\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input ref={emailInputRef} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            ref={passwordInputRef}\n            type=\"password\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Verifying...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\n\nimport React, { useContext } from \"react\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        {authCtx.isLoggedIn && (\n          <Route path=\"/profile\">\n            <UserProfile />\n          </Route>\n        )}\n        <Route path=\"*\" >\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__24eVo\",\"control\":\"AuthForm_control__Aw9_1\",\"actions\":\"AuthForm_actions__1WGVz\",\"toggle\":\"AuthForm_toggle__17v9x\"};"],"sourceRoot":""}